/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        Stack<ListNode>s1=new Stack<>();
        Stack<ListNode>s2=new Stack<>();
        ListNode th1=headA;
        ListNode th2=headB;
        while(th1!=null){
            s1.push(th1);
            th1=th1.next;
        }
        while(th2!=null){
            s2.push(th2);
            th2=th2.next;
        }
        ListNode temp=null;
        while(!s1.isEmpty() && !s2.isEmpty()){
            if(s1.peek()==s2.peek()){
                temp=s1.peek();
                s1.pop();
                s2.pop();
            }
            else{
                break;
            }
        }
        return temp;
    }
}
